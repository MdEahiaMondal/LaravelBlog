<?php

namespace App;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class Post extends Model
{

    protected $fillable = [
        'user_id',
        'title',
        'slug',
        'body',
        'view_count',
        'status',
        'is_approved',
    ];

    protected $appends = ['image_path']; // append custom attribute

    public function getImagePathAttribute() // get custom attribute
    {
        return Storage::url($this->image->path);
    }

    public function getRouteKeyName() // change route key name with slug
    {
        return 'slug';
    }


    public function user()
    {
        return $this->belongsTo(User::class);
    }


    public function categories()
    {
        return $this->belongsToMany(Category::class)->withTimestamps();
    }

    public function tags()
    {
        return $this->belongsToMany(Tag::class)->withTimestamps();
    }


    public function favorite_to_users()  //  more user can favarite one post
    {
        return $this->belongsToMany(User::class)->withTimestamps();
    }


    public function comments()
    {
        return $this->hasMany(Comment::class); // one post has many comment
    }


    // we can use scope
    public function scopeApproved($query)
    {
        return $query->where('is_approved', 1);
    }

    public function scopePublication($query)
    {
        return $query->where('status', 1);
    }


    public function scopeMostCommented(Builder $builder){
        return $builder->withCount('comments')->orderBy('comments_count', 'desc');
    }


    public function image()
    {
        return $this->morphOne(Image::class, 'imageable');
    }


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (Post $post){
            $post->slug = Str::slug($post->title);
        });
    }


}
